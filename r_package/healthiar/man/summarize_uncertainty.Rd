% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize_uncertainty.R
\name{summarize_uncertainty}
\alias{summarize_uncertainty}
\title{Get Monte Carlo confidence intervals}
\usage{
summarize_uncertainty(output_attribute, n_sim, seed = NULL)
}
\arguments{
\item{output_attribute}{\code{variable} in which the output of a \code{healthiar::attribute_...()} function call are stored.}

\item{n_sim}{\code{numeric value} indicating the number of simulations to be performed.}

\item{seed}{\code{numeric value} for fixing the randomization. If empty, 123 is used as a default.}
}
\value{
This function returns a summary uncertainty central estimate and correcponding lower and upper confidence intervals for the attributable health impacts by Monte Carlo simulation.
}
\description{
This function determines summary uncertainty (based on central, lower and upper estimates of at least one input variable) using attribute() or compare()
function output by Monte Carlo simulation.

Input variables that will be processed are:
\itemize{
  \item{relative_risk (\code{rr_...})}
  \item{exposure (\code{exp_...})}
  \item{cutoff (\code{cutoff_...})}
  \item{baseline health data (\code{bhd_...})}
  \item{disability weight (\code{dw_...})}
  \item{duration (\code{duration_...})}
  }
}
\details{
\strong{Method}

For each processed input variable with a provided 95\% confidence interval value, a distribution is fitted (see below). From these, \code{n_sim} input value sets are sampled to compute \code{n_sim} attributable impacts. The median value of these attributable impacts is reported as the central estimate, and the 2.5th and 97.5th percentiles define the lower and upper bounds of the 95\% summary uncertainty confidence interval, respectively. Aggregated central, lower and upper estimates are obtained by summing the corresponding values of each lower level unit.

\strong{Distributions used for simulation}

Relative risk values are simulated based on an optimized gamma distribution, which fits well as relative risks are positive and its distributions usually right-skewed. The gamma distribution best fitting the inputted central relative risk estimate and corresponding lower and upper 95\% confidence interval values is fitted using \code{stats::qgamma()} (with \code{rate = shape / rr_central}) and then \code{stats::optimize} is used to optimize the distribution parameters. Finally, \code{n_sim} relative risk values are simulated using \code{stats::rgamma()}.

Exposure values are simulated based on a normal distribution using \code{stats::rnorm()} with \code{mean = exp_central} and a standard deviation based on corresponding lower and upper 95\% exposure confidence interval values.

Cutoff values are simulated based on a normal distribution using \code{stats::rnorm()} with \code{mean = cutoff_central} and a standard deviation based on corresponding lower and upper 95\% cutoff confidence interval values.

Baseline health data values are simulated based on a normal distribution using \code{stats::rnorm()} with \code{mean = bhd_central} and a standard deviation based on corresponding lower and upper 95\% exposure confidence interval values.

Disability weights values of the morbidity health outcome of interest are simulated based on a beta distribution, as both the disability weights and the beta distribution are bounded by 0 and 1. The beta distribution best fitting the inputted central disability weight estimate and corresponding lower and upper 95\% confidence interval values is fitted using \code{stats::qgamma()} (the best fitting distribution parameters \code{shape1} and \code{shape2} are determined using \code{stats::optimize()}). Finally, \code{n_sim} disability weight values are simulated using \code{stats::rbeta()}.

Duration values of the morbidity health outcome of interest are simulated based on a normal distribution using \code{stats::rnorm()} with \code{mean = duration_central} and a standard deviation based on corresponding lower and upper 95\% exposure confidence interval values.
}
\examples{
# Goal: obtain summary uncertainty for an existing attribute_health() output
# First create an assessment
attribute_health_output <- attribute_health(
  erf_shape = "log_linear",
  rr_central = 1.369,
  rr_lower = 1.124,
  rr_upper = 1.664,
  rr_increment = 10,
  exp_central = 8.85,
  exp_lower = 8,
  exp_upper = 10,
  cutoff_central = 5,
  bhd_central = 30747,
  bhd_lower = 28000,
  bhd_upper = 32000
)
# Then run Monte Carlo simulation
results <- summarize_uncertainty(
  output_attribute = attribute_health_output,
  n_sim = 100
)
results$uncertainty_main$impact # Central, lower and upper estimates
}
\author{
Alberto Castro & Axel Luyten
}
